package com.atguigu.kafka.producer;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.common.serialization.StringSerializer;

import java.util.Properties;

/**
 * @author leon
 * @ClassName CustomProducer.java
 * @createTime 2022年06月18日 15:39:00
 */
public class CustomProducer {
    public static void main(String[] args) {
        // 1. 创建配置对象
        Properties properties = new Properties();                                                   //在properties对象里面配置服务器、序列化器、拦截器等
        properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,"hadoop102:9092,hadoop103:9092");
        properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());   //key值需要序列化
        properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());    //value值也需要序列化
        // 2. 创建kafkaProducer对象
        KafkaProducer<String, String> producer = new KafkaProducer<String, String>(properties);

        // 3. 发送数据
        for(int i =1;i<11;i++){
            // 4. 造数据
            String message= "客官你好，我是"+i+"号，很高兴为您服务！";
            // 5. 包装
            ProducerRecord<String, String> producerRecord = new ProducerRecord<String, String>(
                    "jianglai",
                    message
            );
            // 6. 发送
            producer.send(producerRecord);
        }

        // 4. 关闭资源
        producer.close();
    }
}
