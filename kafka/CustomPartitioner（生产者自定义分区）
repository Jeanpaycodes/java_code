package com.atguigu.kafka.partition;

import org.apache.kafka.clients.producer.Partitioner;
import org.apache.kafka.common.Cluster;

import java.util.Map;

/**
 * @author leon
 * @ClassName CustomPartitioner.java
 * @createTime 2022年06月20日 10:13:00
 */
public class CustomPartitioner implements Partitioner {     //实现partitioner接口
    /**
     * 分区： 想是实现常见的那种hash，369进入到0号分区
     * @param topic
     * @param key
     * @param keyBytes
     * @param value
     * @param valueBytes
     * @param cluster
     * @return
     */
    @Override
    public int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster) {
        if(key == null){
            return 0;
        }
        // 1. 获取到key
        String keyStr = key.toString();
        // 2. 获取分区个数
        Integer partitionNum = cluster.partitionCountForTopic(topic);
        // 3. 计算分区号
        int partition = Math.abs(keyStr.hashCode()) % partitionNum;
        return partition;
    }

    @Override
    public void close() {

    }

    @Override
    public void configure(Map<String, ?> configs) {

    }
}
